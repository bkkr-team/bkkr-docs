/*!
 * (C) BKKR Framework https://bkkr-team.github.io/bkkr-docs/ - MIT License
 */
import{a as e}from"./p-fef964f0.js";import{c as i}from"./p-bf8dbf30.js";const a="bkkrViewWillEnter",r="bkkrViewDidEnter",s="bkkrViewWillLeave",n="bkkrViewDidLeave",k="bkkrViewWillUnload",t=i=>new Promise(((a,r)=>{e((()=>{o(i),b(i).then((e=>{e.animation&&e.animation.destroy(),l(i),a(e)}),(e=>{l(i),r(e)}))}))})),o=e=>{const i=e.enteringEl,a=e.leavingEl;y(i,a,e.direction),u(i,!1),a&&u(a,!1)},b=async e=>d(e),l=e=>{const i=e.leavingEl;e.enteringEl.classList.remove("bkkr-page-invisible"),void 0!==i&&i.classList.remove("bkkr-page-invisible")},d=async e=>{const i=e.enteringEl,a=e.leavingEl;return await w(e,!1),m(i,a),v(i,a),{hasCompleted:!0}},w=async(e,i)=>{const a=(void 0!==e.deepWait?e.deepWait:i)?[V(e.enteringEl),V(e.leavingEl)]:[p(e.enteringEl),p(e.leavingEl)];await Promise.all(a),await c(e.viewIsReady,e.enteringEl)},c=async(e,i)=>{e&&await e(i)},m=(e,i)=>{f(i,"bkkrViewWillLeave"),f(e,"bkkrViewWillEnter")},v=(e,i)=>{f(e,"bkkrViewDidEnter"),f(i,"bkkrViewDidLeave")},f=(e,i)=>{if(e){const a=new CustomEvent(i,{bubbles:!1,cancelable:!1});e.dispatchEvent(a)}},p=e=>e?new Promise((a=>i(e,a))):Promise.resolve(),V=async e=>{const i=e;if(i){if(null!=i.componentOnReady&&null!=await i.componentOnReady())return;await Promise.all(Array.from(i.children).map(V))}},u=(e,i)=>{i?(e.setAttribute("aria-hidden","true"),e.classList.add("bkkr-page-hidden")):(e.hidden=!1,e.removeAttribute("aria-hidden"),e.classList.remove("bkkr-page-hidden"))},y=(e,i,a)=>{void 0!==e&&(e.style.zIndex="back"===a?"99":"101"),void 0!==i&&(i.style.zIndex="100")};export{a as L,r as a,s as b,n as c,k as d,V as e,t}