/*!
 * (C) BKKR Framework https://bkkr-team.github.io/bkkr-docs/ - MIT License
 */
import{a}from"./p-3b0af71a.js";import{b as i,L as s,a as e,c as n}from"./p-d7a8dd59.js";import{c as r,r as o}from"./p-6518e4d1.js";const t=i=>new Promise(((s,e)=>{a((()=>{d(i),c(i).then((a=>{a.animation&&a.animation.destroy(),m(i),s(a)}),(a=>{m(i),e(a)}))}))})),d=a=>{const i=a.enteringEl,s=a.leavingEl;P(i,s,a.direction),y(i,!1),s&&y(s,!1)},c=async a=>b(a),m=a=>{const i=a.leavingEl;a.enteringEl.classList.remove("bkkr-page-invisible"),void 0!==i&&i.classList.remove("bkkr-page-invisible")},b=async a=>{const i=a.enteringEl,s=a.leavingEl;return await l(a,!1),w(i,s),f(i,s),{hasCompleted:!0}},l=async(a,i)=>{const s=(void 0!==a.deepWait?a.deepWait:i)?[v(a.enteringEl),v(a.leavingEl)]:[u(a.enteringEl),u(a.leavingEl)];await Promise.all(s),await p(a.viewIsReady,a.enteringEl)},p=async(a,i)=>{a&&await a(i)},w=(a,e)=>{k(e,i),k(a,s)},f=(a,i)=>{k(a,e),k(i,n)},k=(a,i)=>{if(a){const s=new CustomEvent(i,{bubbles:!1,cancelable:!1});a.dispatchEvent(s)}},u=a=>a?new Promise((i=>r(a,i))):Promise.resolve(),v=async a=>{const i=a;if(i){if(null!=i.componentOnReady){if(null!=await i.componentOnReady())return}else if(null!=i.__registerHost){const a=new Promise((a=>o(a)));return void await a}await Promise.all(Array.from(i.children).map(v))}},y=(a,i)=>{i?(a.setAttribute("aria-hidden","true"),a.classList.add("bkkr-page-hidden")):(a.hidden=!1,a.removeAttribute("aria-hidden"),a.classList.remove("bkkr-page-hidden"))},P=(a,i,s)=>{void 0!==a&&(a.style.zIndex="back"===s?"99":"101"),void 0!==i&&(i.style.zIndex="100")};export{v as d,t}