import{r as o,c as t,h as s,H as n,g as r}from"./p-900e5a2b.js";const i=class{constructor(s){o(this,s),this.bkkrChange=t(this,"bkkrChange",7),this.animated=!0,this.disabled=!1,this.readonly=!1,this.expand="compact"}valueChanged(){const{value:o,multiple:t}=this;!t&&Array.isArray(o)?this.value=o[0]:this.bkkrChange.emit({value:this.value})}async disabledChanged(){const{disabled:o}=this,t=await this.getAccordions();for(const s of t)s.disabled=o}async readonlyChanged(){const{readonly:o}=this,t=await this.getAccordions();for(const s of t)s.readonly=o}async onKeydown(o){const t=document.activeElement;if(!t)return;const s="BKKR-ACCORDION"===t.tagName?t:t.closest("bkkr-accordion");if(!s)return;if(s.closest("bkkr-accordion-group")!==this.el)return;const n=await this.getAccordions(),r=n.findIndex((o=>o===s));if(-1===r)return;let i;"ArrowDown"===o.key?i=this.findNextAccordion(n,r):"ArrowUp"===o.key?i=this.findPreviousAccordion(n,r):"Home"===o.key?i=n[0]:"End"===o.key&&(i=n[n.length-1]),void 0!==i&&i!==t&&i.focus()}async componentDidLoad(){this.disabled&&this.disabledChanged(),this.readonly&&this.readonlyChanged()}async requestAccordionToggle(o,t){const{multiple:s,value:n,readonly:r,disabled:i}=this;if(!r&&!i)if(t)if(s){const t=n||[],s=Array.isArray(t)?t:[t];void 0===s.find((t=>t===o))&&void 0!==o&&(this.value=[...s,o])}else this.value=o;else if(s){const t=n||[],s=Array.isArray(t)?t:[t];this.value=s.filter((t=>t!==o))}else this.value=void 0}findNextAccordion(o,t){const s=o[t+1];return void 0===s?o[0]:s}findPreviousAccordion(o,t){const s=o[t-1];return void 0===s?o[o.length-1]:s}async getAccordions(){return Array.from(this.el.querySelectorAll("bkkr-accordion"))}render(){const{disabled:o,readonly:t,expand:r}=this;return s(n,{class:{"accordion-group-disabled":o,"accordion-group-readonly":t,[`accordion-group-expand-${r}`]:!0},role:"presentation"},s("slot",null))}get el(){return r(this)}static get watchers(){return{value:["valueChanged"],disabled:["disabledChanged"],readonly:["readonlyChanged"]}}};i.style=":host{display:block}:host(.accordion-group-expand-inset) ::slotted(bkkr-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(bkkr-accordion.accordion-expanded){border-bottom:none}";export{i as bkkr_accordion_group}