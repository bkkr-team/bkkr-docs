/*!
 * (C) BKKR Framework https://bkkr-team.github.io/bkkr-docs/ - MIT License
 */
import{r as t,c as i,h as s,H as e,g as a}from"./p-24bb0787.js";import{a as o,d as n}from"./p-bc73b852.js";import{t as r}from"./p-1087b7ed.js";import"./p-7b48497a.js";import"./p-d7a8dd59.js";let h=class{constructor(s){t(this,s),this.bkkrNavWillLoad=i(this,"bkkrNavWillLoad",7),this.bkkrNavWillChange=i(this,"bkkrNavWillChange",3),this.bkkrNavDidChange=i(this,"bkkrNavDidChange",3),this.animated=!0,this.nested=!1}componentWillLoad(){this.bkkrNavWillLoad.emit()}disconnectedCallback(){this.gesture&&(this.gesture.destroy(),this.gesture=void 0)}async commit(t,i,s){const e=await this.lock();let a=!1;try{a=await this.transition(t,i,s)}catch(t){console.error(t)}return e(),a}async setRouteId(t,i,s){return{changed:await this.setRoot(t,i,{duration:"root"===s?0:void 0,direction:"back"===s?"back":"forward"}),element:this.activeEl}}async getRouteId(){const t=this.activeEl;return t?{id:t.tagName,element:t}:void 0}async setRoot(t,i,s){if(this.activeComponent===t)return!1;const e=this.activeEl,a=await o(this.delegate,this.el,t,["bkkr-page","bkkr-page-invisible"],i);return this.activeComponent=t,this.activeEl=a,await this.commit(a,e,s),await n(this.delegate,e),!0}async transition(t,i,s={}){if(i===t)return!1;this.bkkrNavWillChange.emit();const{el:e}=this,a=this.animated,o=s.animationBuilder||this.animation;return await r(Object.assign(Object.assign({animated:a,enteringEl:t,leavingEl:i,baseEl:e},s),{animationBuilder:o})),this.bkkrNavDidChange.emit(),!0}async lock(){const t=this.waitPromise;let i;return this.waitPromise=new Promise((t=>i=t)),void 0!==t&&await t,i}render(){const{nested:t}=this;return s(e,{class:{nested:t}},s("slot",null))}get el(){return a(this)}};h.style=":host{top:0;right:0;bottom:0;left:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}:host(.nested){position:relative;contain:unset;}:host(.nested) ::slotted(.bkkr-page){position:relative !important;contain:unset !important}";export{h as bkkr_router_outlet}