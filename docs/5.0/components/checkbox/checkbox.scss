@use "../../scss/mixins";
@use "../../scss/functions";
@use "../../scss/globals";

// Checkbox
// --------------------------------------------------

@use "checkbox.vars" as *;

:host {
  /**
   * @prop --background: Background
   *
   * @prop --border-color: Border color
   * @prop --border-color-activated: Border color when pressed
   * @prop --border-color-focused: Border color when focused
   * @prop --border-color-hover: Border color on hover
   *
   * @prop --checkmark-color: Color of the checkbox checkmark when checked
   * @prop --checkmark-width: Stroke width of the checkbox checkmark
   */
  --background: #fff;
  --border-color: #d1d6ee;
  --border-color-hover: #bbc1e1;
  --checkmark-color: #{functions.color-get(globals.$theme-colors, primary, base)};
  --checkmark-width: 2px;

  display: inline-block;

  position: relative;

  width: 24px;
  height: 24px;

  user-select: none;
  z-index: globals.$z-index-item-input;
}

label {
  @include mixins.hide-cover();

  display: flex;

  align-items: center;

  opacity: 0;
}

input {
  @include mixins.hide-visually();
}

.checkbox-button {
  @include mixins.border-radius-set(4px);

  display: block;

  width: 24px;
  height: 24px;

  transform: scale(var(--scale, 1)) translateZ(0);

  transition: stroke-dasharray .6s, stroke-dashoffset .6s, box-shadow .3s;

  box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border-color));
  z-index: 1;
  pointer-events: none;
  fill: none;
  stroke: var(--checkmark-color, var(--border-color));
  stroke-width: var(--checkmark-width);
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-dasharray: var(--array, 86.12);
  stroke-dashoffset: var(--offset, 86.12);
}


// Hover State
// ---------------------------------------------

@media (any-hover: hover) {
  :host(:hover) .checkbox-button {
    --s: 2px;
    --b: var(--border-color-hover);
  }
}

// Checked / Indeterminate Checkbox
// ---------------------------------------------

:host(.checkbox-checked) {
  .checkbox-button {
    --s: 2px;
    --b: var(--checkmark-color);
    --array: 16.1 86.12;
    --offset: 102.22;
    transition: stroke-dasharray .5s, stroke-dashoffset .5s, box-shadow .2s .3s;
  }
}

// Disabled Checkbox
// ---------------------------------------------

:host(.checkbox-disabled) {
  pointer-events: none;

  opacity: $disabled-opacity;
}

// iOS Checkbox Within An Item
// -----------------------------------------

:host(.in-item) {
  // end position by default
  @include mixins.margin-set($item-end-margin-top, $item-end-margin-end, $item-end-margin-bottom, $item-end-margin-start);

  display: block;

  position: static;
}

:host(.in-item[slot="start"]) {
  @include mixins.margin-set($item-start-margin-top, $item-start-margin-end, $item-start-margin-bottom, $item-start-margin-start);
}