@use "../../scss/mixins";
@use "../../scss/functions";
@use "../../scss/globals";


// Label
// --------------------------------------------------

@use "label.vars" as *;

:host-context(.item) {
  /**
   * @prop --color: Color of the label
   */
  --color: initial;

  display: block;

  color: var(--color);

  font-family: globals.$font-family-base;
  font-size: inherit;

  text-overflow: ellipsis;

  white-space: nowrap;

  overflow: hidden;
  box-sizing: border-box;
}

:host(.label-color) {
  color: current-color(base);
}

:host(.label-text-wrap),
:host([text-wrap]) {
  font-size: $label-text-wrap-font-size;

  line-height: $label-text-wrap-line-height;

  white-space: normal;
}

:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {
  pointer-events: none;

  cursor: default;
  opacity: .3;
}

:host-context(.item-input) {
  flex: initial;

  max-width: 200px;
  pointer-events: none;
}

:host-context(.item-textarea) {
  align-self: baseline;
}


// Fixed Inputs
// --------------------------------------------------

:host(.label-fixed) {
  flex: 0 0 100px;

  width: 100px;
  min-width: 100px;
  max-width: 200px;
}

// Floating Label
// --------------------------------------------------

:host(.label-floating) {
  @include mixins.margin-set(null, null, 0, null);
  align-self: stretch;

  width: auto;
  max-width: 100%;

  transform: translate3d(0, 30px, 0);
  transform-origin: left top;

  transition: transform .15s ease-in-out;

}

:host(.label-no-animate.label-floating) {
  transition: none;
}

// State
:host-context(.item-has-focus).label-floating {
  color: $label-text-color-focused;
}

:host-context(.item-has-focus).label-floating,
:host-context(.item-has-value).label-floating {
  transform: translate3d(0, 0, 0) scale(.82);
}

// Headings
// --------------------------------------------------

::slotted(*) h1,
::slotted(*) h2,
::slotted(*) h3,
::slotted(*) h4,
::slotted(*) h5,
::slotted(*) h6 {
  text-overflow: inherit;

  overflow: inherit;
}
