import{r as o,c as t,h as n,H as r,g as s}from"./p-30285648.js";const i=class{constructor(n){o(this,n),this.bkkrChange=t(this,"bkkrChange",7),this.animated=!0,this.disabled=!1,this.readonly=!1,this.expand="accordion"}valueChanged(){const{value:o,multiple:t}=this;!t&&Array.isArray(o)?this.value=o[0]:this.bkkrChange.emit({value:this.value})}async disabledChanged(){const{disabled:o}=this,t=await this.getAccordions();for(const n of t)n.disabled=o}async readonlyChanged(){const{readonly:o}=this,t=await this.getAccordions();for(const n of t)n.readonly=o}async onKeydown(o){const t=document.activeElement;if(!t)return;const n="BKKR-ACCORDION"===t.tagName?t:t.closest("bkkr-accordion");if(!n)return;if(n.closest("bkkr-accordion-group")!==this.el)return;const r=await this.getAccordions(),s=r.findIndex((o=>o===n));if(-1===s)return;let i;"ArrowDown"===o.key?i=this.findNextAccordion(r,s):"ArrowUp"===o.key?i=this.findPreviousAccordion(r,s):"Home"===o.key?i=r[0]:"End"===o.key&&(i=r[r.length-1]),void 0!==i&&i!==t&&(o.preventDefault(),i.focus())}async componentDidLoad(){this.disabled&&this.disabledChanged(),this.readonly&&this.readonlyChanged()}async requestAccordionToggle(o,t){const{multiple:n,value:r,readonly:s,disabled:i}=this;if(!s&&!i)if(t)if(n){const t=r||[],n=Array.isArray(t)?t:[t];void 0===n.find((t=>t===o))&&void 0!==o&&(this.value=[...n,o])}else this.value=o;else if(n){const t=r||[],n=Array.isArray(t)?t:[t];this.value=n.filter((t=>t!==o))}else this.value=void 0}findNextAccordion(o,t){const n=o[t+1];return void 0===n?o[0]:n}findPreviousAccordion(o,t){const n=o[t-1];return void 0===n?o[o.length-1]:n}async getAccordions(){return Array.from(this.el.querySelectorAll("bkkr-accordion"))}render(){const{disabled:o,readonly:t,expand:s}=this;return n(r,{class:{"accordion-group-disabled":o,"accordion-group-readonly":t,[`accordion-group-expand-${s}`]:!0},role:"presentation"},n("slot",null))}get el(){return s(this)}static get watchers(){return{value:["valueChanged"],disabled:["disabledChanged"],readonly:["readonlyChanged"]}}};i.style=":host{display:block}:host(.accordion-group-expand-inset) ::slotted(bkkr-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(bkkr-accordion.accordion-expanded){border-bottom:none}";export{i as bkkr_accordion_group}